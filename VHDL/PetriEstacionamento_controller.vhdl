-- Net trabfinal - IOPT
-- Automatic code generated by IOPT2VHDL XSLT transformation.
-- by GRES Research Group - 2014 


Library IEEE;
Use IEEE.STD_LOGIC_1164.ALL;
Use IEEE.STD_LOGIC_ARITH.ALL;
Use IEEE.STD_LOGIC_UNSIGNED.ALL;


Entity trabfinal IS
Port(
    Clk : IN STD_LOGIC;
    PRES1_IN1 : IN STD_LOGIC;
    PRES2_IN1 : IN STD_LOGIC;
    TICKET_IN1 : IN STD_LOGIC;
    PRES1_OUT1 : IN STD_LOGIC;
    PRES2_OUT1 : IN STD_LOGIC;
    TICKET_OUT1 : IN STD_LOGIC;
    PRES1_IN2 : IN STD_LOGIC;
    PRES2_IN2 : IN STD_LOGIC;
    TICKET_IN2 : IN STD_LOGIC;
    PRES1_OUT2 : IN STD_LOGIC;
    PRES2_OUT2 : IN STD_LOGIC;
    TICKET_OUT2 : IN STD_LOGIC;
    PRES1_OUT3 : IN STD_LOGIC;
    PRES2_OUT3 : IN STD_LOGIC;
    TICKET_OUT3 : IN STD_LOGIC;
    AND01a : IN STD_LOGIC;
    AND01b : IN STD_LOGIC;
    Park0 : IN STD_LOGIC;
    Unpark0 : IN STD_LOGIC;
    Park1 : IN STD_LOGIC;
    Unpark1 : IN STD_LOGIC;
    CANC_IN1 : OUT STD_LOGIC;
    CANC_OUT1 : OUT STD_LOGIC;
    CANC_IN2 : OUT STD_LOGIC;
    CANC_OUT2 : OUT STD_LOGIC;
    CANC_OUT3 : OUT STD_LOGIC;
    CAPT : OUT INTEGER RANGE 0 TO 100;
    CAP0 : OUT INTEGER RANGE 0 TO 50;
    CAP1 : OUT INTEGER RANGE 0 TO 50;
    CIRC0 : OUT INTEGER RANGE 0 TO 100;
    CIRC1 : OUT INTEGER RANGE 0 TO 100;
    Enable : IN STD_LOGIC;
    Reset : IN STD_LOGIC
);
End trabfinal;

Architecture Structural OF trabfinal IS

    Signal p_18: INTEGER RANGE 0 TO 3 := 1;
    Signal p_22: INTEGER RANGE 0 TO 3 := 0;
    Signal p_26: INTEGER RANGE 0 TO 3 := 0;
    Signal p_35: INTEGER RANGE 0 TO 3 := 0;
    Signal p_43: INTEGER RANGE 0 TO 3 := 0;
    Signal p_51: INTEGER RANGE 0 TO 100 := 100;
    Signal p_53: INTEGER RANGE 0 TO 3 := 1;
    Signal p_55: INTEGER RANGE 0 TO 3 := 0;
    Signal p_57: INTEGER RANGE 0 TO 3 := 0;
    Signal p_61: INTEGER RANGE 0 TO 3 := 0;
    Signal p_64: INTEGER RANGE 0 TO 3 := 0;
    Signal p_85: INTEGER RANGE 0 TO 100 := 0;
    Signal p_89: INTEGER RANGE 0 TO 3 := 1;
    Signal p_91: INTEGER RANGE 0 TO 3 := 0;
    Signal p_93: INTEGER RANGE 0 TO 3 := 0;
    Signal p_97: INTEGER RANGE 0 TO 3 := 0;
    Signal p_100: INTEGER RANGE 0 TO 3 := 0;
    Signal p_123: INTEGER RANGE 0 TO 3 := 1;
    Signal p_125: INTEGER RANGE 0 TO 3 := 0;
    Signal p_127: INTEGER RANGE 0 TO 3 := 0;
    Signal p_131: INTEGER RANGE 0 TO 3 := 0;
    Signal p_134: INTEGER RANGE 0 TO 3 := 0;
    Signal p_158: INTEGER RANGE 0 TO 3 := 1;
    Signal p_160: INTEGER RANGE 0 TO 3 := 0;
    Signal p_162: INTEGER RANGE 0 TO 3 := 0;
    Signal p_166: INTEGER RANGE 0 TO 3 := 0;
    Signal p_169: INTEGER RANGE 0 TO 3 := 0;
    Signal p_192: INTEGER RANGE 0 TO 100 := 0;
    Signal p_197: INTEGER RANGE 0 TO 100 := 0;
    Signal p_200: INTEGER RANGE 0 TO 1 := 1;
    Signal p_205: INTEGER RANGE 0 TO 3 := 0;
    Signal p_206: INTEGER RANGE 0 TO 3 := 0;
    Signal p_219: INTEGER RANGE 0 TO 3 := 0;
    Signal p_220: INTEGER RANGE 0 TO 3 := 0;
    Signal p_231: INTEGER RANGE 0 TO 3 := 0;
    Signal p_237: INTEGER RANGE 0 TO 3 := 0;
    Signal p_253: INTEGER RANGE 0 TO 50 := 0;
    Signal p_261: INTEGER RANGE 0 TO 3 := 0;
    Signal p_267: INTEGER RANGE 0 TO 3 := 0;
    Signal p_272: INTEGER RANGE 0 TO 50 := 0;
    Signal p_275: INTEGER RANGE 0 TO 3 := 0;
    Signal p_277: INTEGER RANGE 0 TO 3 := 0;
    Signal p_287: INTEGER RANGE 0 TO 50 := 50;
    Signal p_288: INTEGER RANGE 0 TO 50 := 50;


    Signal s_CANC_IN1 : STD_LOGIC := '0';
    Signal s_CANC_OUT1 : STD_LOGIC := '0';
    Signal s_CANC_IN2 : STD_LOGIC := '0';
    Signal s_CANC_OUT2 : STD_LOGIC := '0';
    Signal s_CANC_OUT3 : STD_LOGIC := '0';
    Signal s_CAPT : INTEGER RANGE 0 TO 100 := 0;
    Signal s_CAP0 : INTEGER RANGE 0 TO 50 := 0;
    Signal s_CAP1 : INTEGER RANGE 0 TO 50 := 0;
    Signal s_CIRC0 : INTEGER RANGE 0 TO 100 := 0;
    Signal s_CIRC1 : INTEGER RANGE 0 TO 100 := 0;

    -- Array implementation:

Begin
    -- Selected array items:

    proc_in_events: PROCESS( Clk, Enable ) IS
    Begin
      If falling_edge(Clk) Then
        If Reset = '0' AND Enable = '1' Then
        End If;
      End If;
    End PROCESS;


    proc_transitions: PROCESS( Clk, Enable, Reset ) IS
      Variable p_18_add, p_18_avail : INTEGER RANGE 0 to 3;
      Variable p_22_add, p_22_avail : INTEGER RANGE 0 to 3;
      Variable p_26_add, p_26_avail : INTEGER RANGE 0 to 3;
      Variable p_35_add, p_35_avail : INTEGER RANGE 0 to 3;
      Variable p_43_add, p_43_avail : INTEGER RANGE 0 to 3;
      Variable p_51_add, p_51_avail : INTEGER RANGE 0 to 100;
      Variable p_53_add, p_53_avail : INTEGER RANGE 0 to 3;
      Variable p_55_add, p_55_avail : INTEGER RANGE 0 to 3;
      Variable p_57_add, p_57_avail : INTEGER RANGE 0 to 3;
      Variable p_61_add, p_61_avail : INTEGER RANGE 0 to 3;
      Variable p_64_add, p_64_avail : INTEGER RANGE 0 to 3;
      Variable p_85_add, p_85_avail : INTEGER RANGE 0 to 100;
      Variable p_89_add, p_89_avail : INTEGER RANGE 0 to 3;
      Variable p_91_add, p_91_avail : INTEGER RANGE 0 to 3;
      Variable p_93_add, p_93_avail : INTEGER RANGE 0 to 3;
      Variable p_97_add, p_97_avail : INTEGER RANGE 0 to 3;
      Variable p_100_add, p_100_avail : INTEGER RANGE 0 to 3;
      Variable p_123_add, p_123_avail : INTEGER RANGE 0 to 3;
      Variable p_125_add, p_125_avail : INTEGER RANGE 0 to 3;
      Variable p_127_add, p_127_avail : INTEGER RANGE 0 to 3;
      Variable p_131_add, p_131_avail : INTEGER RANGE 0 to 3;
      Variable p_134_add, p_134_avail : INTEGER RANGE 0 to 3;
      Variable p_158_add, p_158_avail : INTEGER RANGE 0 to 3;
      Variable p_160_add, p_160_avail : INTEGER RANGE 0 to 3;
      Variable p_162_add, p_162_avail : INTEGER RANGE 0 to 3;
      Variable p_166_add, p_166_avail : INTEGER RANGE 0 to 3;
      Variable p_169_add, p_169_avail : INTEGER RANGE 0 to 3;
      Variable p_192_add, p_192_avail : INTEGER RANGE 0 to 100;
      Variable p_197_add, p_197_avail : INTEGER RANGE 0 to 100;
      Variable p_200_add, p_200_avail : INTEGER RANGE 0 to 1;
      Variable p_205_add, p_205_avail : INTEGER RANGE 0 to 3;
      Variable p_206_add, p_206_avail : INTEGER RANGE 0 to 3;
      Variable p_219_add, p_219_avail : INTEGER RANGE 0 to 3;
      Variable p_220_add, p_220_avail : INTEGER RANGE 0 to 3;
      Variable p_231_add, p_231_avail : INTEGER RANGE 0 to 3;
      Variable p_237_add, p_237_avail : INTEGER RANGE 0 to 3;
      Variable p_253_add, p_253_avail : INTEGER RANGE 0 to 50;
      Variable p_261_add, p_261_avail : INTEGER RANGE 0 to 3;
      Variable p_267_add, p_267_avail : INTEGER RANGE 0 to 3;
      Variable p_272_add, p_272_avail : INTEGER RANGE 0 to 50;
      Variable p_275_add, p_275_avail : INTEGER RANGE 0 to 3;
      Variable p_277_add, p_277_avail : INTEGER RANGE 0 to 3;
      Variable p_287_add, p_287_avail : INTEGER RANGE 0 to 50;
      Variable p_288_add, p_288_avail : INTEGER RANGE 0 to 50;
    Begin
      If Reset = '1' Then
          p_18 <= 1;
          p_22 <= 0;
          p_26 <= 0;
          p_35 <= 0;
          p_43 <= 0;
          p_51 <= 100;
          p_53 <= 1;
          p_55 <= 0;
          p_57 <= 0;
          p_61 <= 0;
          p_64 <= 0;
          p_85 <= 0;
          p_89 <= 1;
          p_91 <= 0;
          p_93 <= 0;
          p_97 <= 0;
          p_100 <= 0;
          p_123 <= 1;
          p_125 <= 0;
          p_127 <= 0;
          p_131 <= 0;
          p_134 <= 0;
          p_158 <= 1;
          p_160 <= 0;
          p_162 <= 0;
          p_166 <= 0;
          p_169 <= 0;
          p_192 <= 0;
          p_197 <= 0;
          p_200 <= 1;
          p_205 <= 0;
          p_206 <= 0;
          p_219 <= 0;
          p_220 <= 0;
          p_231 <= 0;
          p_237 <= 0;
          p_253 <= 0;
          p_261 <= 0;
          p_267 <= 0;
          p_272 <= 0;
          p_275 <= 0;
          p_277 <= 0;
          p_287 <= 50;
          p_288 <= 50;
      Elsif rising_edge(Clk) Then
        If Enable = '1' Then
          p_18_avail := p_18;
          p_18_add := 0;   -- NoCar@IN1;
          p_22_avail := p_22;
          p_22_add := 0;   -- CarAtIN1;
          p_26_avail := p_26;
          p_26_add := 0;   -- TookTicket;
          p_35_avail := p_35;
          p_35_add := 0;   -- pl_35;
          p_43_avail := p_43;
          p_43_add := 0;   -- pl_43;
          p_51_avail := p_51;
          p_51_add := 0;   -- CAP;
          p_53_avail := p_53;
          p_53_add := 0;   -- NoCar@OUT1;
          p_55_avail := p_55;
          p_55_add := 0;   -- CarAtOUT1;
          p_57_avail := p_57;
          p_57_add := 0;   -- PutTicket;
          p_61_avail := p_61;
          p_61_add := 0;   -- pl_35_2;
          p_64_avail := p_64;
          p_64_add := 0;   -- pl_43_2;
          p_85_avail := p_85;
          p_85_add := 0;   -- OCC;
          p_89_avail := p_89;
          p_89_add := 0;   -- NoCar@IN2;
          p_91_avail := p_91;
          p_91_add := 0;   -- CarAtIN1_3;
          p_93_avail := p_93;
          p_93_add := 0;   -- TookTicket_2;
          p_97_avail := p_97;
          p_97_add := 0;   -- pl_35_3;
          p_100_avail := p_100;
          p_100_add := 0;   -- pl_43_3;
          p_123_avail := p_123;
          p_123_add := 0;   -- NoCar@OUT2;
          p_125_avail := p_125;
          p_125_add := 0;   -- CarAtOUT2;
          p_127_avail := p_127;
          p_127_add := 0;   -- PutTicket_2;
          p_131_avail := p_131;
          p_131_add := 0;   -- pl_35_2_2;
          p_134_avail := p_134;
          p_134_add := 0;   -- pl_43_2_2;
          p_158_avail := p_158;
          p_158_add := 0;   -- NoCar@OUT3;
          p_160_avail := p_160;
          p_160_add := 0;   -- CarAtOUT3;
          p_162_avail := p_162;
          p_162_add := 0;   -- PutTicket_3;
          p_166_avail := p_166;
          p_166_add := 0;   -- pl_35_2_3;
          p_169_avail := p_169;
          p_169_add := 0;   -- pl_43_2_3;
          p_192_avail := p_192;
          p_192_add := 0;   -- CarrosP0;
          p_197_avail := p_197;
          p_197_add := 0;   -- CarrosP1;
          p_200_avail := p_200;
          p_200_add := 0;   -- RampaDisp;
          p_205_avail := p_205;
          p_205_add := 0;   -- Subida;
          p_206_avail := p_206;
          p_206_add := 0;   -- Descida;
          p_219_avail := p_219;
          p_219_add := 0;   -- pl_219;
          p_220_avail := p_220;
          p_220_add := 0;   -- pl_220;
          p_231_avail := p_231;
          p_231_add := 0;   -- pl_231;
          p_237_avail := p_237;
          p_237_add := 0;   -- pl_237;
          p_253_avail := p_253;
          p_253_add := 0;   -- Parked@0;
          p_261_avail := p_261;
          p_261_add := 0;   -- Parking@0;
          p_267_avail := p_267;
          p_267_add := 0;   -- unParking@0;
          p_272_avail := p_272;
          p_272_add := 0;   -- Parked@1;
          p_275_avail := p_275;
          p_275_add := 0;   -- Parking@1;
          p_277_avail := p_277;
          p_277_add := 0;   -- unParking@1;
          p_287_avail := p_287;
          p_287_add := 0;   -- P0CAP;
          p_288_avail := p_288;
          p_288_add := 0;   -- P1CAP;


          -- Transition 20 - tr_20
          If (p_18_avail >= 1) and 
             (conv_integer(PRES1_IN1) = 1) -- guard expr 
          Then
              p_18_avail := p_18_avail - 1;    -- NoCar@IN1
              p_22_add := p_22_add + 1;   -- CarAtIN1
          End If;

          -- Transition 24 - tr_24
          If (p_22_avail >= 1) and 
             (conv_integer(TICKET_IN1) = 1 AND p_51 > 0) -- guard expr 
          Then
              p_22_avail := p_22_avail - 1;    -- CarAtIN1
              p_26_add := p_26_add + 1;   -- TookTicket
          End If;

          -- Transition 28 - tr_28
          If (p_22_avail >= 1) and 
             (conv_integer(PRES1_IN1) = 0) -- guard expr 
          Then
              p_22_avail := p_22_avail - 1;    -- CarAtIN1
              p_18_add := p_18_add + 1;   -- NoCar@IN1
          End If;

          -- Transition 31 - tr_31
          If (p_26_avail >= 1) and 
             (conv_integer(PRES1_IN1) = 0) -- guard expr 
          Then
              p_26_avail := p_26_avail - 1;    -- TookTicket
              p_18_add := p_18_add + 1;   -- NoCar@IN1
          End If;

          -- Transition 34 - tr_34
          If (p_26_avail >= 1) and 
             (conv_integer(PRES2_IN1) = 1) -- guard expr 
          Then
              p_26_avail := p_26_avail - 1;    -- TookTicket
              p_35_add := p_35_add + 1;   -- pl_35
          End If;

          -- Transition 38 - tr_38
          If (p_35_avail >= 1) and 
             (conv_integer(PRES2_IN1) = 0) -- guard expr 
          Then
              p_35_avail := p_35_avail - 1;    -- pl_35
              p_26_add := p_26_add + 1;   -- TookTicket
          End If;

          -- Transition 41 - tr_41
          If (p_35_avail >= 1) and 
             (conv_integer(PRES1_IN1) = 0) -- guard expr 
          Then
              p_35_avail := p_35_avail - 1;    -- pl_35
              p_43_add := p_43_add + 1;   -- pl_43
          End If;

          -- Transition 45 - tr_45
          If (p_43_avail >= 1) and 
             (conv_integer(PRES1_IN1) = 1) -- guard expr 
          Then
              p_43_avail := p_43_avail - 1;    -- pl_43
              p_35_add := p_35_add + 1;   -- pl_35
          End If;

          -- Transition 48 - tr_48
          If (p_43_avail >= 1) and
             (p_51_avail >= 1) and 
             (conv_integer(PRES2_IN1) = 0) -- guard expr 
          Then
              p_43_avail := p_43_avail - 1;    -- pl_43
              p_51_avail := p_51_avail - 1;    -- CAP
              p_18_add := p_18_add + 1;   -- NoCar@IN1
              p_85_add := p_85_add + 1;   -- OCC
              p_192_add := p_192_add + 1;   -- CarrosP0
          End If;

          -- Transition 54 - tr_20_2
          If (p_53_avail >= 1) and 
             (conv_integer(PRES1_OUT1) = 1) -- guard expr 
          Then
              p_53_avail := p_53_avail - 1;    -- NoCar@OUT1
              p_55_add := p_55_add + 1;   -- CarAtOUT1
          End If;

          -- Transition 56 - tr_24_2
          If (p_55_avail >= 1) and 
             (conv_integer(TICKET_OUT1) = 1 AND p_192 > 0) -- guard expr 
          Then
              p_55_avail := p_55_avail - 1;    -- CarAtOUT1
              p_57_add := p_57_add + 1;   -- PutTicket
          End If;

          -- Transition 58 - tr_28_2
          If (p_55_avail >= 1) and 
             (conv_integer(PRES1_OUT1) = 0) -- guard expr 
          Then
              p_55_avail := p_55_avail - 1;    -- CarAtOUT1
              p_53_add := p_53_add + 1;   -- NoCar@OUT1
          End If;

          -- Transition 59 - tr_31_2
          If (p_57_avail >= 1) and 
             (conv_integer(PRES1_OUT1) = 0) -- guard expr 
          Then
              p_57_avail := p_57_avail - 1;    -- PutTicket
              p_53_add := p_53_add + 1;   -- NoCar@OUT1
          End If;

          -- Transition 60 - tr_34_2
          If (p_57_avail >= 1) and 
             (conv_integer(PRES2_OUT1) = 1) -- guard expr 
          Then
              p_57_avail := p_57_avail - 1;    -- PutTicket
              p_61_add := p_61_add + 1;   -- pl_35_2
          End If;

          -- Transition 62 - tr_38_2
          If (p_61_avail >= 1) and 
             (conv_integer(PRES2_OUT1) = 0) -- guard expr 
          Then
              p_61_avail := p_61_avail - 1;    -- pl_35_2
              p_57_add := p_57_add + 1;   -- PutTicket
          End If;

          -- Transition 63 - tr_41_2
          If (p_61_avail >= 1) and 
             (conv_integer(PRES1_OUT1) = 0) -- guard expr 
          Then
              p_61_avail := p_61_avail - 1;    -- pl_35_2
              p_64_add := p_64_add + 1;   -- pl_43_2
          End If;

          -- Transition 65 - tr_45_2
          If (p_64_avail >= 1) and 
             (conv_integer(PRES1_OUT1) = 1) -- guard expr 
          Then
              p_64_avail := p_64_avail - 1;    -- pl_43_2
              p_61_add := p_61_add + 1;   -- pl_35_2
          End If;

          -- Transition 66 - tr_48_2
          If (p_64_avail >= 1) and
             (p_85_avail >= 1) and
             (p_192_avail >= 1) and 
             (conv_integer(PRES2_OUT1) = 0) -- guard expr 
          Then
              p_64_avail := p_64_avail - 1;    -- pl_43_2
              p_85_avail := p_85_avail - 1;    -- OCC
              p_192_avail := p_192_avail - 1;    -- CarrosP0
              p_53_add := p_53_add + 1;   -- NoCar@OUT1
              p_51_add := p_51_add + 1;   -- CAP
          End If;

          -- Transition 90 - tr_20_3
          If (p_89_avail >= 1) and 
             (conv_integer(PRES1_IN2) = 1) -- guard expr 
          Then
              p_89_avail := p_89_avail - 1;    -- NoCar@IN2
              p_91_add := p_91_add + 1;   -- CarAtIN1_3
          End If;

          -- Transition 92 - tr_24_3
          If (p_91_avail >= 1) and 
             (conv_integer(TICKET_IN2) = 1 AND p_51 > 0) -- guard expr 
          Then
              p_91_avail := p_91_avail - 1;    -- CarAtIN1_3
              p_93_add := p_93_add + 1;   -- TookTicket_2
          End If;

          -- Transition 94 - tr_28_3
          If (p_91_avail >= 1) and 
             (conv_integer(PRES1_IN2) = 0) -- guard expr 
          Then
              p_91_avail := p_91_avail - 1;    -- CarAtIN1_3
              p_89_add := p_89_add + 1;   -- NoCar@IN2
          End If;

          -- Transition 95 - tr_31_3
          If (p_93_avail >= 1) and 
             (conv_integer(PRES1_IN2) = 0) -- guard expr 
          Then
              p_93_avail := p_93_avail - 1;    -- TookTicket_2
              p_89_add := p_89_add + 1;   -- NoCar@IN2
          End If;

          -- Transition 96 - tr_34_3
          If (p_93_avail >= 1) and 
             (conv_integer(PRES2_IN2) = 1) -- guard expr 
          Then
              p_93_avail := p_93_avail - 1;    -- TookTicket_2
              p_97_add := p_97_add + 1;   -- pl_35_3
          End If;

          -- Transition 98 - tr_38_3
          If (p_97_avail >= 1) and 
             (conv_integer(PRES2_IN2) = 0) -- guard expr 
          Then
              p_97_avail := p_97_avail - 1;    -- pl_35_3
              p_93_add := p_93_add + 1;   -- TookTicket_2
          End If;

          -- Transition 99 - tr_41_3
          If (p_97_avail >= 1) and 
             (conv_integer(PRES1_IN2) = 0) -- guard expr 
          Then
              p_97_avail := p_97_avail - 1;    -- pl_35_3
              p_100_add := p_100_add + 1;   -- pl_43_3
          End If;

          -- Transition 101 - tr_45_3
          If (p_100_avail >= 1) and 
             (conv_integer(PRES1_IN2) = 1) -- guard expr 
          Then
              p_100_avail := p_100_avail - 1;    -- pl_43_3
              p_97_add := p_97_add + 1;   -- pl_35_3
          End If;

          -- Transition 102 - tr_48_3
          If (p_100_avail >= 1) and
             (p_51_avail >= 1) and 
             (conv_integer(PRES2_IN2) = 0) -- guard expr 
          Then
              p_100_avail := p_100_avail - 1;    -- pl_43_3
              p_51_avail := p_51_avail - 1;    -- CAP
              p_89_add := p_89_add + 1;   -- NoCar@IN2
              p_85_add := p_85_add + 1;   -- OCC
              p_197_add := p_197_add + 1;   -- CarrosP1
          End If;

          -- Transition 124 - tr_20_2_2
          If (p_123_avail >= 1) and 
             (conv_integer(PRES1_OUT2) = 1) -- guard expr 
          Then
              p_123_avail := p_123_avail - 1;    -- NoCar@OUT2
              p_125_add := p_125_add + 1;   -- CarAtOUT2
          End If;

          -- Transition 126 - tr_24_2_2
          If (p_125_avail >= 1) and 
             (conv_integer(TICKET_OUT2) = 1 AND p_192 > 0) -- guard expr 
          Then
              p_125_avail := p_125_avail - 1;    -- CarAtOUT2
              p_127_add := p_127_add + 1;   -- PutTicket_2
          End If;

          -- Transition 128 - tr_28_2_2
          If (p_125_avail >= 1) and 
             (conv_integer(PRES1_OUT2) = 0) -- guard expr 
          Then
              p_125_avail := p_125_avail - 1;    -- CarAtOUT2
              p_123_add := p_123_add + 1;   -- NoCar@OUT2
          End If;

          -- Transition 129 - tr_31_2_2
          If (p_127_avail >= 1) and 
             (conv_integer(PRES1_OUT2) = 0) -- guard expr 
          Then
              p_127_avail := p_127_avail - 1;    -- PutTicket_2
              p_123_add := p_123_add + 1;   -- NoCar@OUT2
          End If;

          -- Transition 130 - tr_34_2_2
          If (p_127_avail >= 1) and 
             (conv_integer(PRES2_OUT2) = 1) -- guard expr 
          Then
              p_127_avail := p_127_avail - 1;    -- PutTicket_2
              p_131_add := p_131_add + 1;   -- pl_35_2_2
          End If;

          -- Transition 132 - tr_38_2_2
          If (p_131_avail >= 1) and 
             (conv_integer(PRES2_OUT2) = 0) -- guard expr 
          Then
              p_131_avail := p_131_avail - 1;    -- pl_35_2_2
              p_127_add := p_127_add + 1;   -- PutTicket_2
          End If;

          -- Transition 133 - tr_41_2_2
          If (p_131_avail >= 1) and 
             (conv_integer(PRES1_OUT2) = 0) -- guard expr 
          Then
              p_131_avail := p_131_avail - 1;    -- pl_35_2_2
              p_134_add := p_134_add + 1;   -- pl_43_2_2
          End If;

          -- Transition 135 - tr_45_2_2
          If (p_134_avail >= 1) and 
             (conv_integer(PRES1_OUT2) = 1) -- guard expr 
          Then
              p_134_avail := p_134_avail - 1;    -- pl_43_2_2
              p_131_add := p_131_add + 1;   -- pl_35_2_2
          End If;

          -- Transition 136 - tr_48_2_2
          If (p_134_avail >= 1) and
             (p_85_avail >= 1) and
             (p_192_avail >= 1) and 
             (conv_integer(PRES2_OUT2) = 0) -- guard expr 
          Then
              p_134_avail := p_134_avail - 1;    -- pl_43_2_2
              p_85_avail := p_85_avail - 1;    -- OCC
              p_192_avail := p_192_avail - 1;    -- CarrosP0
              p_123_add := p_123_add + 1;   -- NoCar@OUT2
              p_51_add := p_51_add + 1;   -- CAP
          End If;

          -- Transition 159 - tr_20_2_3
          If (p_158_avail >= 1) and 
             (conv_integer(PRES1_OUT3) = 1) -- guard expr 
          Then
              p_158_avail := p_158_avail - 1;    -- NoCar@OUT3
              p_160_add := p_160_add + 1;   -- CarAtOUT3
          End If;

          -- Transition 161 - tr_24_2_3
          If (p_160_avail >= 1) and 
             (conv_integer(TICKET_OUT3) = 1 AND p_197 > 0) -- guard expr 
          Then
              p_160_avail := p_160_avail - 1;    -- CarAtOUT3
              p_162_add := p_162_add + 1;   -- PutTicket_3
          End If;

          -- Transition 163 - tr_28_2_3
          If (p_160_avail >= 1) and 
             (conv_integer(PRES1_OUT3) = 0) -- guard expr 
          Then
              p_160_avail := p_160_avail - 1;    -- CarAtOUT3
              p_158_add := p_158_add + 1;   -- NoCar@OUT3
          End If;

          -- Transition 164 - tr_31_2_3
          If (p_162_avail >= 1) and 
             (conv_integer(PRES1_OUT3) = 0) -- guard expr 
          Then
              p_162_avail := p_162_avail - 1;    -- PutTicket_3
              p_158_add := p_158_add + 1;   -- NoCar@OUT3
          End If;

          -- Transition 165 - tr_34_2_3
          If (p_162_avail >= 1) and 
             (conv_integer(PRES2_OUT3) = 1) -- guard expr 
          Then
              p_162_avail := p_162_avail - 1;    -- PutTicket_3
              p_166_add := p_166_add + 1;   -- pl_35_2_3
          End If;

          -- Transition 167 - tr_38_2_3
          If (p_166_avail >= 1) and 
             (conv_integer(PRES2_OUT3) = 0) -- guard expr 
          Then
              p_166_avail := p_166_avail - 1;    -- pl_35_2_3
              p_162_add := p_162_add + 1;   -- PutTicket_3
          End If;

          -- Transition 168 - tr_41_2_3
          If (p_166_avail >= 1) and 
             (conv_integer(PRES1_OUT3) = 0) -- guard expr 
          Then
              p_166_avail := p_166_avail - 1;    -- pl_35_2_3
              p_169_add := p_169_add + 1;   -- pl_43_2_3
          End If;

          -- Transition 170 - tr_45_2_3
          If (p_169_avail >= 1) and 
             (conv_integer(PRES1_OUT3) = 1) -- guard expr 
          Then
              p_169_avail := p_169_avail - 1;    -- pl_43_2_3
              p_166_add := p_166_add + 1;   -- pl_35_2_3
          End If;

          -- Transition 171 - tr_48_2_3
          If (p_169_avail >= 1) and
             (p_85_avail >= 1) and
             (p_197_avail >= 1) and 
             (conv_integer(PRES2_OUT3) = 0) -- guard expr 
          Then
              p_169_avail := p_169_avail - 1;    -- pl_43_2_3
              p_85_avail := p_85_avail - 1;    -- OCC
              p_197_avail := p_197_avail - 1;    -- CarrosP1
              p_158_add := p_158_add + 1;   -- NoCar@OUT3
              p_51_add := p_51_add + 1;   -- CAP
          End If;

          -- Transition 201 - tr_201
          If (p_200_avail >= 1) and 
             (conv_integer(AND01a) = 1 AND p_192 > 0) -- guard expr 
          Then
              p_200_avail := p_200_avail - 1;    -- RampaDisp
              p_205_add := p_205_add + 1;   -- Subida
          End If;

          -- Transition 202 - tr_202
          If (p_200_avail >= 1) and 
             (conv_integer(AND01b) = 1 AND p_197 > 0) -- guard expr 
          Then
              p_200_avail := p_200_avail - 1;    -- RampaDisp
              p_206_add := p_206_add + 1;   -- Descida
          End If;

          -- Transition 209 - tr_209
          If (p_205_avail >= 1) and 
             (conv_integer(AND01a) = 0) -- guard expr 
          Then
              p_205_avail := p_205_avail - 1;    -- Subida
              p_200_add := p_200_add + 1;   -- RampaDisp
          End If;

          -- Transition 210 - tr_210
          If (p_206_avail >= 1) and 
             (conv_integer(AND01b) = 0) -- guard expr 
          Then
              p_206_avail := p_206_avail - 1;    -- Descida
              p_200_add := p_200_add + 1;   -- RampaDisp
          End If;

          -- Transition 215 - tr_215
          If (p_205_avail >= 1) and 
             (conv_integer(AND01b) = 1) -- guard expr 
          Then
              p_205_avail := p_205_avail - 1;    -- Subida
              p_219_add := p_219_add + 1;   -- pl_219
          End If;

          -- Transition 216 - tr_216
          If (p_206_avail >= 1) and 
             (conv_integer(AND01a) = 1) -- guard expr 
          Then
              p_206_avail := p_206_avail - 1;    -- Descida
              p_220_add := p_220_add + 1;   -- pl_220
          End If;

          -- Transition 223 - tr_223
          If (p_219_avail >= 1) and 
             (conv_integer(AND01b) = 0) -- guard expr 
          Then
              p_219_avail := p_219_avail - 1;    -- pl_219
              p_205_add := p_205_add + 1;   -- Subida
          End If;

          -- Transition 224 - tr_224
          If (p_220_avail >= 1) and 
             (conv_integer(AND01a) = 0) -- guard expr 
          Then
              p_220_avail := p_220_avail - 1;    -- pl_220
              p_206_add := p_206_add + 1;   -- Descida
          End If;

          -- Transition 229 - tr_229
          If (p_219_avail >= 1) and 
             (conv_integer(AND01a) = 0) -- guard expr 
          Then
              p_219_avail := p_219_avail - 1;    -- pl_219
              p_231_add := p_231_add + 1;   -- pl_231
          End If;

          -- Transition 230 - tr_230
          If (p_220_avail >= 1) and 
             (conv_integer(AND01b) = 0) -- guard expr 
          Then
              p_220_avail := p_220_avail - 1;    -- pl_220
              p_237_add := p_237_add + 1;   -- pl_237
          End If;

          -- Transition 234 - tr_234
          If (p_231_avail >= 1) and 
             (conv_integer(AND01a) = 1) -- guard expr 
          Then
              p_231_avail := p_231_avail - 1;    -- pl_231
              p_219_add := p_219_add + 1;   -- pl_219
          End If;

          -- Transition 238 - tr_238
          If (p_237_avail >= 1) and 
             (conv_integer(AND01b) = 1) -- guard expr 
          Then
              p_237_avail := p_237_avail - 1;    -- pl_237
              p_220_add := p_220_add + 1;   -- pl_220
          End If;

          -- Transition 243 - tr_243
          If (p_231_avail >= 1) and
             (p_192_avail >= 1) and 
             (conv_integer(AND01b) = 0) -- guard expr 
          Then
              p_231_avail := p_231_avail - 1;    -- pl_231
              p_192_avail := p_192_avail - 1;    -- CarrosP0
              p_200_add := p_200_add + 1;   -- RampaDisp
              p_197_add := p_197_add + 1;   -- CarrosP1
          End If;

          -- Transition 246 - tr_246
          If (p_237_avail >= 1) and
             (p_197_avail >= 1) and 
             (conv_integer(AND01a) = 0) -- guard expr 
          Then
              p_237_avail := p_237_avail - 1;    -- pl_237
              p_197_avail := p_197_avail - 1;    -- CarrosP1
              p_200_add := p_200_add + 1;   -- RampaDisp
              p_192_add := p_192_add + 1;   -- CarrosP0
          End If;

          -- Transition 255 - tr_255
          If (p_192_avail >= 1) and
             (p_287_avail >= 1) and 
             (conv_integer(Park0) = 1 AND p_192 > 0 AND p_261 = 0) -- guard expr 
          Then
              p_192_avail := p_192_avail - 1;    -- CarrosP0
              p_287_avail := p_287_avail - 1;    -- P0CAP
              p_261_add := p_261_add + 1;   -- Parking@0
          End If;

          -- Transition 256 - tr_256
          If (p_253_avail >= 1) and 
             (conv_integer(Unpark0) = 1 AND p_267 = 0) -- guard expr 
          Then
              p_253_avail := p_253_avail - 1;    -- Parked@0
              p_267_add := p_267_add + 1;   -- unParking@0
          End If;

          -- Transition 263 - tr_263
          If (p_261_avail >= 1) and 
             (conv_integer(Park0) = 0) -- guard expr 
          Then
              p_261_avail := p_261_avail - 1;    -- Parking@0
              p_253_add := p_253_add + 1;   -- Parked@0
          End If;

          -- Transition 269 - tr_269
          If (p_267_avail >= 1) and 
             (conv_integer(Unpark0) = 0) -- guard expr 
          Then
              p_267_avail := p_267_avail - 1;    -- unParking@0
              p_192_add := p_192_add + 1;   -- CarrosP0
              p_287_add := p_287_add + 1;   -- P0CAP
          End If;

          -- Transition 273 - tr_255_2
          If (p_197_avail >= 1) and
             (p_288_avail >= 1) and 
             (conv_integer(Park1) = 1 AND p_197 > 0 AND p_275 = 0) -- guard expr 
          Then
              p_197_avail := p_197_avail - 1;    -- CarrosP1
              p_288_avail := p_288_avail - 1;    -- P1CAP
              p_275_add := p_275_add + 1;   -- Parking@1
          End If;

          -- Transition 274 - tr_256_2
          If (p_272_avail >= 1) and 
             (conv_integer(Unpark1) = 1 AND p_277 = 0) -- guard expr 
          Then
              p_272_avail := p_272_avail - 1;    -- Parked@1
              p_277_add := p_277_add + 1;   -- unParking@1
          End If;

          -- Transition 276 - tr_263_2
          If (p_275_avail >= 1) and 
             (conv_integer(Park1) = 0) -- guard expr 
          Then
              p_275_avail := p_275_avail - 1;    -- Parking@1
              p_272_add := p_272_add + 1;   -- Parked@1
          End If;

          -- Transition 278 - tr_269_2
          If (p_277_avail >= 1) and 
             (conv_integer(Unpark1) = 0) -- guard expr 
          Then
              p_277_avail := p_277_avail - 1;    -- unParking@1
              p_197_add := p_197_add + 1;   -- CarrosP1
              p_288_add := p_288_add + 1;   -- P1CAP
          End If;

          -- Calculate final place marking:
          p_18 <= p_18_avail + p_18_add;
          p_22 <= p_22_avail + p_22_add;
          p_26 <= p_26_avail + p_26_add;
          p_35 <= p_35_avail + p_35_add;
          p_43 <= p_43_avail + p_43_add;
          p_51 <= p_51_avail + p_51_add;
          p_53 <= p_53_avail + p_53_add;
          p_55 <= p_55_avail + p_55_add;
          p_57 <= p_57_avail + p_57_add;
          p_61 <= p_61_avail + p_61_add;
          p_64 <= p_64_avail + p_64_add;
          p_85 <= p_85_avail + p_85_add;
          p_89 <= p_89_avail + p_89_add;
          p_91 <= p_91_avail + p_91_add;
          p_93 <= p_93_avail + p_93_add;
          p_97 <= p_97_avail + p_97_add;
          p_100 <= p_100_avail + p_100_add;
          p_123 <= p_123_avail + p_123_add;
          p_125 <= p_125_avail + p_125_add;
          p_127 <= p_127_avail + p_127_add;
          p_131 <= p_131_avail + p_131_add;
          p_134 <= p_134_avail + p_134_add;
          p_158 <= p_158_avail + p_158_add;
          p_160 <= p_160_avail + p_160_add;
          p_162 <= p_162_avail + p_162_add;
          p_166 <= p_166_avail + p_166_add;
          p_169 <= p_169_avail + p_169_add;
          p_192 <= p_192_avail + p_192_add;
          p_197 <= p_197_avail + p_197_add;
          p_200 <= p_200_avail + p_200_add;
          p_205 <= p_205_avail + p_205_add;
          p_206 <= p_206_avail + p_206_add;
          p_219 <= p_219_avail + p_219_add;
          p_220 <= p_220_avail + p_220_add;
          p_231 <= p_231_avail + p_231_add;
          p_237 <= p_237_avail + p_237_add;
          p_253 <= p_253_avail + p_253_add;
          p_261 <= p_261_avail + p_261_add;
          p_267 <= p_267_avail + p_267_add;
          p_272 <= p_272_avail + p_272_add;
          p_275 <= p_275_avail + p_275_add;
          p_277 <= p_277_avail + p_277_add;
          p_287 <= p_287_avail + p_287_add;
          p_288 <= p_288_avail + p_288_add;

          -- Apply output events to ouput signals:

          -- Calculate transition-action-output final values:
        End If;
      End If;
    End PROCESS;


    proc_place_outputs: PROCESS( Clk, Enable ) IS
    Variable exp_res, new_value: Integer;
    Begin
      If rising_edge(Clk) Then
        If Reset='1' Then
          s_CANC_IN1 <= '0';
          s_CANC_OUT1 <= '0';
          s_CANC_IN2 <= '0';
          s_CANC_OUT2 <= '0';
          s_CANC_OUT3 <= '0';
          s_CAPT <= 0;
          s_CAP0 <= 0;
          s_CAP1 <= 0;
          s_CIRC0 <= 0;
          s_CIRC1 <= 0;

        Elsif Enable='1' Then

          -- Signal CANC_IN1 default value:
          new_value := 0;

          -- CANC_IN1 action on place NoCar@IN1(p_18)
          If p_18 > 0 Then
            exp_res := 0;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN1 action on place NoCar@IN2(p_89)
          If p_89 > 0 Then
            exp_res := 0;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN1 action on place TookTicket(p_26)
          If p_26 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN1 action on place pl_35(p_35)
          If p_35 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN1 action on place pl_43(p_43)
          If p_43 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_IN1 and check result range:
          If new_value < 0 Then s_CANC_IN1 <= '0';
            Elsif new_value > 1 Then s_CANC_IN1 <= '1';
            Else s_CANC_IN1 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_OUT1 default value:
          new_value := 0;

          -- CANC_OUT1 action on place NoCar@OUT1(p_53)
          If p_53 > 0 Then
            exp_res := 0;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT1 action on place PutTicket(p_57)
          If p_57 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT1 action on place pl_35_2(p_61)
          If p_61 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT1 action on place pl_43_2(p_64)
          If p_64 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_OUT1 and check result range:
          If new_value < 0 Then s_CANC_OUT1 <= '0';
            Elsif new_value > 1 Then s_CANC_OUT1 <= '1';
            Else s_CANC_OUT1 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_IN2 default value:
          new_value := 0;

          -- CANC_IN2 action on place TookTicket_2(p_93)
          If p_93 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN2 action on place pl_35_3(p_97)
          If p_97 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN2 action on place pl_43_3(p_100)
          If p_100 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_IN2 and check result range:
          If new_value < 0 Then s_CANC_IN2 <= '0';
            Elsif new_value > 1 Then s_CANC_IN2 <= '1';
            Else s_CANC_IN2 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_OUT2 default value:
          new_value := 0;

          -- CANC_OUT2 action on place NoCar@OUT2(p_123)
          If p_123 > 0 Then
            exp_res := 0;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT2 action on place PutTicket_2(p_127)
          If p_127 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT2 action on place pl_35_2_2(p_131)
          If p_131 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT2 action on place pl_43_2_2(p_134)
          If p_134 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_OUT2 and check result range:
          If new_value < 0 Then s_CANC_OUT2 <= '0';
            Elsif new_value > 1 Then s_CANC_OUT2 <= '1';
            Else s_CANC_OUT2 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_OUT3 default value:
          new_value := 0;

          -- CANC_OUT3 action on place NoCar@OUT3(p_158)
          If p_158 > 0 Then
            exp_res := 0;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT3 action on place PutTicket_3(p_162)
          If p_162 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT3 action on place pl_35_2_3(p_166)
          If p_166 > 0 Then
          End If;

          -- CANC_OUT3 action on place pl_43_2_3(p_169)
          If p_169 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_OUT3 and check result range:
          If new_value < 0 Then s_CANC_OUT3 <= '0';
            Elsif new_value > 1 Then s_CANC_OUT3 <= '1';
            Else s_CANC_OUT3 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CAPT default value:
          new_value := 0;

          -- CAPT action on place CAP(p_51)
          If p_51 > 0 Then
            exp_res := p_51;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CAPT and check result range:
          If new_value < 0 Then s_CAPT <= 0;
            Elsif new_value > 100 Then s_CAPT <= 100;
            Else s_CAPT <= new_value;
          End If;

          -- Signal CAP0 default value:
          new_value := 0;

          -- CAP0 action on place P0CAP(p_287)
          If p_287 > 0 Then
            exp_res := p_287;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CAP0 and check result range:
          If new_value < 0 Then s_CAP0 <= 0;
            Elsif new_value > 50 Then s_CAP0 <= 50;
            Else s_CAP0 <= new_value;
          End If;

          -- Signal CAP1 default value:
          new_value := 0;

          -- CAP1 action on place P1CAP(p_288)
          If p_288 > 0 Then
            exp_res := p_288;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CAP1 and check result range:
          If new_value < 0 Then s_CAP1 <= 0;
            Elsif new_value > 50 Then s_CAP1 <= 50;
            Else s_CAP1 <= new_value;
          End If;

          -- Signal CIRC0 default value:
          new_value := 0;

          -- CIRC0 action on place CarrosP0(p_192)
          If p_192 > 0 Then
            exp_res := p_192;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CIRC0 and check result range:
          If new_value < 0 Then s_CIRC0 <= 0;
            Elsif new_value > 100 Then s_CIRC0 <= 100;
            Else s_CIRC0 <= new_value;
          End If;

          -- Signal CIRC1 default value:
          new_value := 0;

          -- CIRC1 action on place CarrosP1(p_197)
          If p_197 > 0 Then
            exp_res := p_197;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CIRC1 and check result range:
          If new_value < 0 Then s_CIRC1 <= 0;
            Elsif new_value > 100 Then s_CIRC1 <= 100;
            Else s_CIRC1 <= new_value;
          End If;

        End If;
      End If;
    End PROCESS;

    CANC_IN1 <= s_CANC_IN1;
    CANC_OUT1 <= s_CANC_OUT1;
    CANC_IN2 <= s_CANC_IN2;
    CANC_OUT2 <= s_CANC_OUT2;
    CANC_OUT3 <= s_CANC_OUT3;
    CAPT <= s_CAPT;
    CAP0 <= s_CAP0;
    CAP1 <= s_CAP1;
    CIRC0 <= s_CIRC0;
    CIRC1 <= s_CIRC1;

End Structural;
